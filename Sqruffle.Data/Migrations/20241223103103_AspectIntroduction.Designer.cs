// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sqruffle.Data;

#nullable disable

namespace Sqruffle.Data.Migrations
{
    [DbContext(typeof(SqruffleDatabase))]
    [Migration("20241223103103_AspectIntroduction")]
    partial class AspectIntroduction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("AProductAspectSequence");

            modelBuilder.Entity("Sqruffle.Domain.Product.AProductAspect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"AProductAspectSequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.Aspects.Expires", b =>
                {
                    b.HasBaseType("Sqruffle.Domain.Product.AProductAspect");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable("Product_Expires", (string)null);
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.Aspects.OwnershipRegistration", b =>
                {
                    b.HasBaseType("Sqruffle.Domain.Product.AProductAspect");

                    b.Property<string>("RegisterAt")
                        .HasColumnType("text");

                    b.ToTable("Product_OwnershipRegistration", (string)null);
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.Aspects.PeriodicYield", b =>
                {
                    b.HasBaseType("Sqruffle.Domain.Product.AProductAspect");

                    b.Property<decimal>("Increase")
                        .HasColumnType("numeric");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("interval");

                    b.ToTable("Product_PeriodicYield", (string)null);
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.AProductAspect", b =>
                {
                    b.HasOne("Sqruffle.Domain.Product.Product", "Product")
                        .WithMany("Aspects")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sqruffle.Domain.Product.Product", b =>
                {
                    b.Navigation("Aspects");
                });
#pragma warning restore 612, 618
        }
    }
}
